{"remainingRequest":"D:\\vscodework\\Vue\\vue_test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vscodework\\Vue\\vue_test\\src\\components\\MyItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vscodework\\Vue\\vue_test\\src\\components\\MyItem.vue","mtime":1635256702872},{"path":"D:\\vscodework\\Vue\\vue_test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscodework\\Vue\\vue_test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\vscodework\\Vue\\vue_test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscodework\\Vue\\vue_test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgcHVic3ViIGZyb20gJ3B1YnN1Yi1qcycNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ015SXRlbScsDQogIHByb3BzOiBbJ3RvZG8nXSwNCiAgbWV0aG9kczogew0KICAgIC8vIOWLvumAieaIluWPlua2iOWLvumAiQ0KICAgIGhhbmRsZXJDaGVjayhpZCkgew0KICAgICAgLy8g6YCa55+lIEFwcCDnu4Tku7blsIblr7nlupTnmoQgdG9kbyDlr7nosaENCiAgICAgIC8vIHRoaXMuY2hlY2tUb2RvKGlkKQ0KICAgICAgdGhpcy4kYnVzLiRlbWl0KCdjaGVja1RvZG8nLCBpZCkNCiAgICB9LA0KICAgIC8vIOWIoOmZpA0KICAgIGhhbmRsZXJEZWxldGUoaWQpIHsNCiAgICAgIGlmIChjb25maXJtKCfnoa7lrprliKDpmaTlkJfvvJ8nKSkgew0KICAgICAgICAvLyDpgJrnn6UgQXBwIOe7hOS7tuWIoOmZpOWvueW6lOeahCB0b2RvIOWvueixoQ0KICAgICAgICAvLyB0aGlzLmRlbGV0ZVRvZG8oaWQpDQogICAgICAgIC8vIHRoaXMuJGJ1cy4kZW1pdCgnZGVsZXRlVG9kbycsIGlkKQ0KICAgICAgICAvLyDlj5HpgIHmlbDmja7nmoTkuIDmlrnlj5HluIPmtojmga8NCiAgICAgICAgcHVic3ViLnB1Ymxpc2goJ2RlbGV0ZVRvZG8nLCBpZCkNCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOe8lui+kQ0KICAgIGhhbmRsZXJFZGl0KHRvZG8pIHsNCiAgICAgIGlmICh0b2RvLmhhc093blByb3BlcnR5KCdpc0VkaXQnKSkgew0KICAgICAgICB0b2RvLmlzRWRpdCA9IHRydWUNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJHNldCh0b2RvLCAnaXNFZGl0JywgdHJ1ZSkNCiAgICAgIH0NCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCkgew0KICAgICAgICB0aGlzLiRyZWZzLmlucHV0VGl0bGUuZm9jdXMoKQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIOWkseWOu+eEpueCueWbnuiwg++8iOecn+ato+aJp+ihjOS/ruaUuemAu+i+ke+8iQ0KICAgIGhhbmRsZXJCbHVyKHRvZG8sIGUpIHsNCiAgICAgIHRvZG8uaXNFZGl0ID0gZmFsc2UNCiAgICAgIGlmICghZS50YXJnZXQudmFsdWUudHJpbSgpKSByZXR1cm4gYWxlcnQoJ+i+k+WFpeS4jeiDveS4uuepuicpDQogICAgICB0aGlzLiRidXMuJGVtaXQoJ3VwZGF0ZVRvZG8nLCB0b2RvLmlkLCBlLnRhcmdldC52YWx1ZSkNCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["MyItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <transition name=\"todo\" appear>\r\n    <li>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          :checked=\"todo.done\"\r\n          @change=\"handlerCheck(todo.id)\"\r\n        />\r\n        <!-- 以下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了 props -->\r\n        <!-- <input type=\"checkbox\" v-model=\"todo.done\" /> -->\r\n        <span v-show=\"!todo.isEdit\">{{ todo.title }}</span>\r\n        <input\r\n          type=\"text\"\r\n          v-show=\"todo.isEdit\"\r\n          :value=\"todo.title\"\r\n          @blur=\"handlerBlur(todo, $event)\"\r\n          ref=\"inputTitle\"\r\n        />\r\n      </label>\r\n      <button class=\"btn btn-danger\" @click=\"handlerDelete(todo.id)\">\r\n        删除\r\n      </button>\r\n      <button\r\n        class=\"btn btn-edit\"\r\n        v-show=\"!todo.isEdit\"\r\n        @click=\"handlerEdit(todo)\"\r\n      >\r\n        编辑\r\n      </button>\r\n    </li>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport pubsub from 'pubsub-js'\r\nexport default {\r\n  name: 'MyItem',\r\n  props: ['todo'],\r\n  methods: {\r\n    // 勾选或取消勾选\r\n    handlerCheck(id) {\r\n      // 通知 App 组件将对应的 todo 对象\r\n      // this.checkTodo(id)\r\n      this.$bus.$emit('checkTodo', id)\r\n    },\r\n    // 删除\r\n    handlerDelete(id) {\r\n      if (confirm('确定删除吗？')) {\r\n        // 通知 App 组件删除对应的 todo 对象\r\n        // this.deleteTodo(id)\r\n        // this.$bus.$emit('deleteTodo', id)\r\n        // 发送数据的一方发布消息\r\n        pubsub.publish('deleteTodo', id)\r\n      }\r\n    },\r\n    // 编辑\r\n    handlerEdit(todo) {\r\n      if (todo.hasOwnProperty('isEdit')) {\r\n        todo.isEdit = true\r\n      } else {\r\n        this.$set(todo, 'isEdit', true)\r\n      }\r\n      this.$nextTick(function() {\r\n        this.$refs.inputTitle.focus()\r\n      })\r\n    },\r\n    // 失去焦点回调（真正执行修改逻辑）\r\n    handlerBlur(todo, e) {\r\n      todo.isEdit = false\r\n      if (!e.target.value.trim()) return alert('输入不能为空')\r\n      this.$bus.$emit('updateTodo', todo.id, e.target.value)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*item*/\r\nli {\r\n  list-style: none;\r\n  height: 36px;\r\n  line-height: 36px;\r\n  padding: 0 5px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nli label {\r\n  float: left;\r\n  cursor: pointer;\r\n}\r\n\r\nli label li input {\r\n  vertical-align: middle;\r\n  margin-right: 6px;\r\n  position: relative;\r\n  top: -1px;\r\n}\r\n\r\nli button {\r\n  float: right;\r\n  display: none;\r\n  margin-top: 3px;\r\n}\r\n\r\nli:before {\r\n  content: initial;\r\n}\r\n\r\nli:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\nli:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\nli:hover button {\r\n  display: block;\r\n}\r\n\r\n.todo-enter-active {\r\n  animation: lloam 1s linear;\r\n}\r\n\r\n.todo-leave-active {\r\n  animation: lloam 1s linear reverse;\r\n}\r\n\r\n@keyframes lloam {\r\n  from {\r\n    transform: translateX(100%);\r\n  }\r\n  to {\r\n    transform: translateX(0px);\r\n  }\r\n}\r\n</style>\r\n"]}]}