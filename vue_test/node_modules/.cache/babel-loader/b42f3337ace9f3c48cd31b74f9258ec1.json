{"remainingRequest":"D:\\vscodework\\Vue\\vue_test\\node_modules\\babel-loader\\lib\\index.js!D:\\vscodework\\Vue\\vue_test\\src\\store\\person.js","dependencies":[{"path":"D:\\vscodework\\Vue\\vue_test\\src\\store\\person.js","mtime":1635607605904},{"path":"D:\\vscodework\\Vue\\vue_test\\babel.config.js","mtime":1634920094297},{"path":"D:\\vscodework\\Vue\\vue_test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscodework\\Vue\\vue_test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vIOaVtOWQiOS6uuWRmOebuOWFs+aooeWdlwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBuYW5vaWQgfSBmcm9tICduYW5vaWQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBhY3Rpb25zOiB7CiAgICBhZGRQZXJzb25XYW5nOiBmdW5jdGlvbiBhZGRQZXJzb25XYW5nKGNvbnRleHQsIHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZS5uYW1lLmluZGV4T2YoJ+eOiycpID09PSAwKSB7CiAgICAgICAgY29udGV4dC5jb21taXQoJ0FERF9QRVJTT04nLCB2YWx1ZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYWxlcnQoJ+a3u+WKoOeahOS6uuW/hemhu+Wnk+eOiycpOwogICAgICB9CiAgICB9LAogICAgYWRkUGVyc29uU2VydmVyOiBmdW5jdGlvbiBhZGRQZXJzb25TZXJ2ZXIoY29udGV4dCkgewogICAgICBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLnVpeHNqLmNuL2hpdG9rb3RvL2dldD90eXBlPXNvY2lhbCcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29udGV4dC5jb21taXQoJ0FERF9QRVJTT04nLCB7CiAgICAgICAgICBpZDogbmFub2lkKCksCiAgICAgICAgICBuYW1lOiByZXNwb25zZS5kYXRhCiAgICAgICAgfSk7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGFsZXJ0KGVycm9yLm1lc3NhZ2UpOwogICAgICB9KTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgQUREX1BFUlNPTjogZnVuY3Rpb24gQUREX1BFUlNPTihzdGF0ZSwgdmFsdWUpIHsKICAgICAgY29uc29sZS5sb2coJ211dGF0aW9uc+S4reeahEFERF9QRVJTT07ooqvosIPnlKjkuoYnKTsKICAgICAgc3RhdGUucGVyc29uTGlzdC51bnNoaWZ0KHZhbHVlKTsKICAgIH0KICB9LAogIHN0YXRlOiB7CiAgICBwZXJzb25MaXN0OiBbewogICAgICBpZDogJzAwMScsCiAgICAgIG5hbWU6ICflvKDkuIknCiAgICB9XQogIH0sCiAgZ2V0dGVyczogewogICAgZmlyc3RQZXJzb25OYW1lOiBmdW5jdGlvbiBmaXJzdFBlcnNvbk5hbWUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnBlcnNvbkxpc3RbMF0ubmFtZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["D:/vscodework/Vue/vue_test/src/store/person.js"],"names":["axios","nanoid","namespaced","actions","addPersonWang","context","value","name","indexOf","commit","alert","addPersonServer","get","then","response","id","data","error","message","mutations","ADD_PERSON","state","console","log","personList","unshift","getters","firstPersonName"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbC,EAAAA,OAAO,EAAC;AACNC,IAAAA,aADM,yBACQC,OADR,EACgBC,KADhB,EACsB;AAC1B,UAAGA,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmB,GAAnB,MAA4B,CAA/B,EAAkC;AAChCH,QAAAA,OAAO,CAACI,MAAR,CAAe,YAAf,EAA4BH,KAA5B;AACD,OAFD,MAEK;AACHI,QAAAA,KAAK,CAAC,UAAD,CAAL;AACD;AACF,KAPK;AAQNC,IAAAA,eARM,2BAQUN,OARV,EAQkB;AACtBL,MAAAA,KAAK,CAACY,GAAN,CAAU,+CAAV,EAA2DC,IAA3D,CACE,UAAAC,QAAQ,EAAI;AACVT,QAAAA,OAAO,CAACI,MAAR,CAAe,YAAf,EAA4B;AAACM,UAAAA,EAAE,EAAEd,MAAM,EAAX;AAAcM,UAAAA,IAAI,EAAEO,QAAQ,CAACE;AAA7B,SAA5B;AACD,OAHH,EAIE,UAAAC,KAAK,EAAI;AACPP,QAAAA,KAAK,CAACO,KAAK,CAACC,OAAP,CAAL;AACD,OANH;AAQD;AAjBK,GAFK;AAqBbC,EAAAA,SAAS,EAAC;AACRC,IAAAA,UADQ,sBACGC,KADH,EACSf,KADT,EACe;AACrBgB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAF,MAAAA,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAAyBnB,KAAzB;AACD;AAJO,GArBG;AA2Bbe,EAAAA,KAAK,EAAE;AACLG,IAAAA,UAAU,EAAE,CACV;AAACT,MAAAA,EAAE,EAAE,KAAL;AAAWR,MAAAA,IAAI,EAAE;AAAjB,KADU;AADP,GA3BM;AAgCbmB,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,2BACSN,KADT,EACgB;AACrB,aAAOA,KAAK,CAACG,UAAN,CAAiB,CAAjB,EAAoBjB,IAA3B;AACD;AAHM;AAhCI,CAAf","sourcesContent":["// 整合人员相关模块\r\nimport axios from 'axios'\r\nimport {nanoid} from 'nanoid'\r\nexport default {\r\n  namespaced: true,\r\n  actions:{\r\n    addPersonWang(context,value){\r\n      if(value.name.indexOf('王') === 0) {\r\n        context.commit('ADD_PERSON',value)\r\n      }else{\r\n        alert('添加的人必须姓王')\r\n      }\r\n    },\r\n    addPersonServer(context){\r\n      axios.get('https://api.uixsj.cn/hitokoto/get?type=social').then(\r\n        response => {\r\n          context.commit('ADD_PERSON',{id: nanoid(),name: response.data})\r\n        },\r\n        error => {\r\n          alert(error.message)\r\n        }\r\n      )\r\n    }\r\n  },\r\n  mutations:{\r\n    ADD_PERSON(state,value){\r\n      console.log('mutations中的ADD_PERSON被调用了');\r\n      state.personList.unshift(value)\r\n    }\r\n  },\r\n  state: {\r\n    personList: [\r\n      {id: '001',name: '张三'}\r\n    ]\r\n  },\r\n  getters: {\r\n    firstPersonName(state) {\r\n      return state.personList[0].name\r\n    }\r\n  }\r\n}"]}]}